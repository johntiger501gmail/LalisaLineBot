//createBodysrch.js
export function createBodySRCH(message, intentResult, resultDBF, searchResult) {
    const intentText = intentResult || "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°";
    const bodyContents = [
        {
            type: "text",
            text: `‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: ${
                typeof message === "object" && message.type === "text"
                ? message.text // ‡∏Å‡∏£‡∏ì‡∏µ type = "text"
                : typeof message === "object" && message.type
                ? message.type === "image" // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏£‡∏ì‡∏µ type = "image"
                    ? "image" // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô "image" ‡∏´‡∏≤‡∏Å type ‡∏Ñ‡∏∑‡∏≠ "image"
                    : message.type // ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà "image" ‡∏Å‡πá‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤ type ‡∏≠‡∏∑‡πà‡∏ô‡πÜ
                : message // ‡∏Å‡∏£‡∏ì‡∏µ message ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà object ‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏õ‡πá‡∏ô string ‡∏´‡∏£‡∏∑‡∏≠ number
            }`,
            weight: "regular",
            size: "sm",
            color: "#4682B4",
            margin: "sm",
            wrap: true,
            align: "start"
        },
        {
            type: "text",
            text: `‡∏ö‡∏≠‡∏ó: ${intentText}`,
            weight: "regular",
            size: "sm",
            color: "#4682B4",
            margin: "sm",
            wrap: true,
            align: "start"
        },
        {
            type: "text",
            text: `‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏∞‡∏ö‡∏ö: ${resultDBF}`,
            weight: "regular",
            size: "sm",
            color: "#4682B4",
            margin: "sm",
            wrap: true,
            align: "start"
        }
    ];
   
    // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà searchResult ‡πÄ‡∏õ‡πá‡∏ô object ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏Ñ‡∏µ‡∏¢‡πå 'text' ‡πÄ‡∏õ‡πá‡∏ô array
    if (searchResult && Array.isArray(searchResult.text)) {
        console.log("crtBody.Found valid searchResult.text array.");
    
        // Map ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• searchResult.text ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô searchResultContents ‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Flex Message
        const searchResultContents = searchResult.text.map(item => {
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ item ‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡∏∞‡∏°‡∏µ properties ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
            const { title = "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á", link = "", snippet = "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î", pagemap = {} } = item;
    
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ pagemap ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• thumbnail ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            let thumbnail = pagemap?.thumbnail || null;
            if (thumbnail === null) {
                thumbnail = pagemap?.image || null;
                if (thumbnail === null) {
                    const metatags = pagemap?.metatags ? JSON.parse(pagemap.metatags) : null;
                    if (metatags && metatags['og:image']) {
                        thumbnail = metatags['og:image'];
                    }
                    if (thumbnail === null) {
                        thumbnail = "https://i.imgur.com/fv9DIHe.jpeg"; // ‡πÉ‡∏ä‡πâ placeholder
                    }
                }
            }
    
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö link ‡∏Å‡πà‡∏≠‡∏ô‡∏ï‡∏±‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏ñ‡πâ‡∏≤‡∏´‡∏≤‡∏Å link ‡πÄ‡∏õ‡πá‡∏ô string ‡∏ó‡∏µ‡πà‡∏¢‡∏≤‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô
            const truncatedLink = (typeof link === "string" && link.length > 50)
                ? `${link.substring(0, 47)}...`
                : link;
    
            // ‡∏•‡πá‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
            console.log("crtBody.Creating box for:", title);
            console.log("crtBody.thumbnail:", thumbnail);
            console.log("crtBody.URL:", truncatedLink);
            console.log("crtBody.Snippet:", snippet);
    
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Flex Message
            return {
                type: "box",
                layout: "vertical",
                margin: "sm",
                contents: [
                    {
                        type: "image",
                        url: thumbnail,
                        size: "full",
                        aspectRatio: "16:9",
                        aspectMode: "cover",
                        action: {
                            type: "uri",
                            uri: (typeof link === "string" && link.length > 0) ? link : "https://i.imgur.com/fv9DIHe.jpeg"
                        }
                    },
                    {
                        type: "text",
                        text: `üìå ${title}`,
                        weight: "bold",
                        size: "sm",
                        margin: "md",
                        wrap: true
                    },
                    {
                        type: "text",
                        text: `üîó ${truncatedLink}`,
                        size: "xs",
                        color: "#4682B4",
                        wrap: true,
                        action: {
                            type: "uri",
                            uri: (typeof link === "string" && link.length > 0) ? link : "https://i.imgur.com/fv9DIHe.jpeg"
                        }
                    },
                    {
                        type: "text",
                        text: `üìù ${snippet}`,
                        size: "xs",
                        wrap: true
                    }
                ]
            };
        });
    
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏ô bodyContents
        bodyContents.push(...searchResultContents);
    } else if (typeof searchResult === 'object' && searchResult.text) {
        console.log("createBody.searchResult is Object");
        // ‡∏Å‡∏£‡∏ì‡∏µ searchResult ‡πÄ‡∏õ‡πá‡∏ô Object ‡πÅ‡∏•‡∏∞‡∏°‡∏µ text
        bodyContents.push({
            type: "text",
            text: `üîç ${searchResult.text}`,
            weight: "regular",
            size: "sm",
            color: "#4682B4",
            margin: "sm",
            wrap: true,
            align: "start"
        });
    }

    return {
        type: "box",
        layout: "vertical",
        contents: bodyContents
    };
}
